<Activity mc:Ignorable="sap sap2010" x:Class="GetAnnotation" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:str="clr-namespace:System.Text.RegularExpressions;assembly=System" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_FilePath" Type="InArgument(x:String)" />
    <x:Property Name="out_Description" Type="OutArgument(x:String)" />
    <x:Property Name="out_PreCondition" Type="OutArgument(x:String)" />
    <x:Property Name="out_PostCondition" Type="OutArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>753,2558</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>GetAnnotation_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="22">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="16">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Gets the file annotation and attempts to split it into description, pre, and post condition, by looking for lines that start with &quot;Pre&quot; or &quot;Post&quot;. if it cannot, then everything will be returned in description&#xD;&#xA;&#xD;&#xA;Technically this will grab the first annotation in a file (rather than the top level one). This will always be the top level annotation if there is one. If none are found then the fields will be blank" DisplayName="GetAnnotation" sap:VirtualizedContainerService.HintSize="763,2493" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="this text precedes annotations..." Name="annotationStart">
        <Variable.Default>
          <Literal x:TypeArguments="x:String">sap2010:Annotation.AnnotationText=</Literal>
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="This text follows annotations...." Name="annotationEnd">
        <Variable.Default>
          <Literal x:TypeArguments="x:String">DisplayName=</Literal>
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="x:String" Name="fileText" />
      <Variable x:TypeArguments="s:String[]" Name="fileLines" />
      <Variable x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="Set to line break text that I'm assuming from looking at xamls..... fishy at best" Name="annotationLineBreak">
        <Variable.Default>
          <Literal x:TypeArguments="x:String">&amp;#xD;&amp;#xA;</Literal>
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="Used to track whether we're adding to Pre, Post, or Description" Name="fieldContext" />
      <Variable x:TypeArguments="x:Int32" Name="startIdx" />
      <Variable x:TypeArguments="x:Int32" Name="endIdx" />
      <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="matches" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:ReadTextFile Content="[fileText]" DisplayName="Read Text File xaml file" FileName="[in_FilePath]" sap:VirtualizedContainerService.HintSize="721,80" sap2010:WorkflowViewState.IdRef="ReadTextFile_1" />
    <If Condition="[fileText.Contains(annotationStart)]" DisplayName="If find start of annotation" sap:VirtualizedContainerService.HintSize="721,401" sap2010:WorkflowViewState.IdRef="If_1">
      <If.Then>
        <ui:MultipleAssign sap2010:Annotation.AnnotationText="Split after &quot; &lt;x:Members&gt;&quot; and continue til &quot; &lt;/x:Members&gt;&quot;&#xA;" DisplayName="Multiple Assign Split array into lines just after start of arguments" sap:VirtualizedContainerService.HintSize="338,251" sap2010:WorkflowViewState.IdRef="MultipleAssign_1">
          <ui:MultipleAssign.AssignOperations>
            <scg:List x:TypeArguments="ui:AssignOperation" Capacity="8">
              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_1">
                <ui:AssignOperation.To>
                  <OutArgument x:TypeArguments="x:Int32">[startIdx]</OutArgument>
                </ui:AssignOperation.To>
                <ui:AssignOperation.Value>
                  <InArgument x:TypeArguments="x:Int32">[fileText.IndexOf(annotationStart)]</InArgument>
                </ui:AssignOperation.Value>
              </ui:AssignOperation>
              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_6">
                <ui:AssignOperation.To>
                  <OutArgument x:TypeArguments="x:Int32">[endIdx]</OutArgument>
                </ui:AssignOperation.To>
                <ui:AssignOperation.Value>
                  <InArgument x:TypeArguments="x:Int32">[fileText.IndexOf(annotationEnd)]</InArgument>
                </ui:AssignOperation.Value>
              </ui:AssignOperation>
              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_7">
                <ui:AssignOperation.To>
                  <OutArgument x:TypeArguments="x:String">[fileText]</OutArgument>
                </ui:AssignOperation.To>
                <ui:AssignOperation.Value>
                  <InArgument x:TypeArguments="x:String">[fileText.Substring(startIdx + annotationStart.Length+1, endIdx-startIdx-annotationStart.Length-3)]</InArgument>
                </ui:AssignOperation.Value>
              </ui:AssignOperation>
              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_3">
                <ui:AssignOperation.To>
                  <OutArgument x:TypeArguments="x:String">[out_Description]</OutArgument>
                </ui:AssignOperation.To>
                <ui:AssignOperation.Value>
                  <InArgument x:TypeArguments="x:String">
                    <Literal x:TypeArguments="x:String" Value="" />
                  </InArgument>
                </ui:AssignOperation.Value>
              </ui:AssignOperation>
            </scg:List>
          </ui:MultipleAssign.AssignOperations>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:MultipleAssign>
      </If.Then>
      <If.Else>
        <ui:MultipleAssign sap2010:Annotation.AnnotationText="Blank array since no arguments" DisplayName="Multiple Assign Blank Array" sap:VirtualizedContainerService.HintSize="338,160" sap2010:WorkflowViewState.IdRef="MultipleAssign_2">
          <ui:MultipleAssign.AssignOperations>
            <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_4">
                <ui:AssignOperation.To>
                  <OutArgument x:TypeArguments="s:String[]">[fileLines]</OutArgument>
                </ui:AssignOperation.To>
                <ui:AssignOperation.Value>
                  <InArgument x:TypeArguments="s:String[]">[{}]</InArgument>
                </ui:AssignOperation.Value>
              </ui:AssignOperation>
              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_5">
                <ui:AssignOperation.To>
                  <OutArgument x:TypeArguments="x:String">[out_Description]</OutArgument>
                </ui:AssignOperation.To>
                <ui:AssignOperation.Value>
                  <InArgument x:TypeArguments="x:String">
                    <Literal x:TypeArguments="x:String" Value="" />
                  </InArgument>
                </ui:AssignOperation.Value>
              </ui:AssignOperation>
            </scg:List>
          </ui:MultipleAssign.AssignOperations>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:MultipleAssign>
      </If.Else>
    </If>
    <ui:Matches BuilderPattern="\&amp;\D{1,8}\;" sap:VirtualizedContainerService.HintSize="721,59" sap2010:WorkflowViewState.IdRef="Matches_1" Input="[fileText]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;ADV&quot;,&quot;OperationName&quot;:&quot;Advanced&quot;,&quot;OperationValue&quot;:&quot;\\&amp;\\D{1,8}\\;&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="\&amp;\D{1,8}\;" RegexOption="IgnoreCase" Result="[matches]" />
    <If Condition="[matches.Count = 0]" sap:VirtualizedContainerService.HintSize="721,341" sap2010:WorkflowViewState.IdRef="If_5">
      <If.Then>
        <ui:MultipleAssign sap2010:Annotation.AnnotationText="Blank array since no arguments" DisplayName="Multiple Assign Blank Array" sap:VirtualizedContainerService.HintSize="338,191" sap2010:WorkflowViewState.IdRef="MultipleAssign_4">
          <ui:MultipleAssign.AssignOperations>
            <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_11">
                <ui:AssignOperation.To>
                  <OutArgument x:TypeArguments="x:String">[fieldContext]</OutArgument>
                </ui:AssignOperation.To>
                <ui:AssignOperation.Value>
                  <InArgument x:TypeArguments="x:String">description</InArgument>
                </ui:AssignOperation.Value>
              </ui:AssignOperation>
              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_12">
                <ui:AssignOperation.To>
                  <OutArgument x:TypeArguments="s:String[]">[fileLines]</OutArgument>
                </ui:AssignOperation.To>
                <ui:AssignOperation.Value>
                  <InArgument x:TypeArguments="s:String[]">[{}]</InArgument>
                </ui:AssignOperation.Value>
              </ui:AssignOperation>
              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_13">
                <ui:AssignOperation.To>
                  <OutArgument x:TypeArguments="x:String">[out_Description]</OutArgument>
                </ui:AssignOperation.To>
                <ui:AssignOperation.Value>
                  <InArgument x:TypeArguments="x:String">[fileText]</InArgument>
                </ui:AssignOperation.Value>
              </ui:AssignOperation>
            </scg:List>
          </ui:MultipleAssign.AssignOperations>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:MultipleAssign>
      </If.Then>
      <If.Else>
        <ui:MultipleAssign sap2010:Annotation.AnnotationText="Blank array since no arguments" DisplayName="Multiple Assign Blank Array" sap:VirtualizedContainerService.HintSize="338,191" sap2010:WorkflowViewState.IdRef="MultipleAssign_3">
          <ui:MultipleAssign.AssignOperations>
            <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_8">
                <ui:AssignOperation.To>
                  <OutArgument x:TypeArguments="x:String">[fieldContext]</OutArgument>
                </ui:AssignOperation.To>
                <ui:AssignOperation.Value>
                  <InArgument x:TypeArguments="x:String">description</InArgument>
                </ui:AssignOperation.Value>
              </ui:AssignOperation>
              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_9">
                <ui:AssignOperation.To>
                  <OutArgument x:TypeArguments="x:String">[annotationLineBreak]</OutArgument>
                </ui:AssignOperation.To>
                <ui:AssignOperation.Value>
                  <InArgument x:TypeArguments="x:String">[matches(0).tostring]</InArgument>
                </ui:AssignOperation.Value>
              </ui:AssignOperation>
              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_10">
                <ui:AssignOperation.To>
                  <OutArgument x:TypeArguments="s:String[]">[fileLines]</OutArgument>
                </ui:AssignOperation.To>
                <ui:AssignOperation.Value>
                  <InArgument x:TypeArguments="s:String[]">[Split(fileText, annotationLineBreak)]</InArgument>
                </ui:AssignOperation.Value>
              </ui:AssignOperation>
            </scg:List>
          </ui:MultipleAssign.AssignOperations>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:MultipleAssign>
      </If.Else>
    </If>
    <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each line in file" sap:VirtualizedContainerService.HintSize="721,1268" sap2010:WorkflowViewState.IdRef="ForEach`1_2" Values="[fileLines]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="x:String">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:String" Name="line" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="539,1133" sap2010:WorkflowViewState.IdRef="Sequence_2">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If Condition="[line.Contains(annotationEnd)]" DisplayName="If contains end of annotation. Stop" sap:VirtualizedContainerService.HintSize="497,210" sap2010:WorkflowViewState.IdRef="If_2">
              <If.Then>
                <ui:Break sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Break_1" />
              </If.Then>
            </If>
            <If Condition="[line.ToLower.StartsWith(&quot;pre&quot;)]" DisplayName="If contains pre" sap:VirtualizedContainerService.HintSize="497,210" sap2010:WorkflowViewState.IdRef="If_3">
              <If.Then>
                <Assign DisplayName="Assign field context to pre" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_2">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[fieldContext]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">pre</InArgument>
                  </Assign.Value>
                </Assign>
              </If.Then>
            </If>
            <If Condition="[line.ToLower.StartsWith(&quot;post&quot;)]" DisplayName="If contains post" sap:VirtualizedContainerService.HintSize="497,210" sap2010:WorkflowViewState.IdRef="If_4">
              <If.Then>
                <Assign DisplayName="Assign field context to post" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_3">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[fieldContext]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">post</InArgument>
                  </Assign.Value>
                </Assign>
              </If.Then>
            </If>
            <Switch x:TypeArguments="x:String" DisplayName="Switch where to add content" Expression="[fieldContext]" sap:VirtualizedContainerService.HintSize="497,291" sap2010:WorkflowViewState.IdRef="Switch`1_1">
              <Switch.Default>
                <Assign DisplayName="Assign add to description" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_7">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[out_Description]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[out_Description + line + vbCrLf]</InArgument>
                  </Assign.Value>
                </Assign>
              </Switch.Default>
              <Assign x:Key="pre" DisplayName="Assign add to pre condition" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_4">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[out_PreCondition]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[out_PreCondition + line + vbCrLf]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign x:Key="post" DisplayName="Assign add to post condition" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_5">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[out_PostCondition]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[out_PostCondition + line + vbCrLf]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign x:Key="description" DisplayName="Assign add to description" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_6">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[out_Description]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[out_Description + line + vbCrLf]</InArgument>
                </Assign.Value>
              </Assign>
            </Switch>
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
    </ui:ForEach>
  </Sequence>
</Activity>